<application>
  <component name="AppStorage">
    <histories>
      <item value="beans can look up collaborating beans via the factory ( Dependency Lookup ). Note that most beans will choose to receive references to collaborating beans via corresponding bean properties or constructor arguments ( Dependency Injection )." />
      <item value="Integration code for other frameworks can leverage this interface to wire and populate existing bean instances that Spring does not control the lifecycle of . This is particularly useful for Web Work Actions and Tapestry Page objects , for example ." />
      <item value="Extension of the {@ link org . springframework . beans . factory . Bean Factory } interface to be implemented by bean factories that are capable of autowiring , provided that they want to expose this functionality for existing bean instances . &lt; p &gt; This subinterface of Bean Factory is not meant to be used in normal application code : stick to {@ link org . springframework . beans . factory . Bean Factory } or {@ link org . springframework . beans . factory . Listable Bean Factory } for typical use cases . &lt; p &gt; Integration code for other frameworks can leverage this interface to wire and populate existing bean instances that Spring does not control the lifecycle of . This is particularly useful for Web Work Actions and Tapestry Page objects , for example . &lt; p &gt; Note that this interface is not implemented by {@ link org . springframework . context . Application Context } facades , as it is hardly ever used by application code . That said , it is available from an application context too , accessible through Application Context ' s {@ link org . springframework . context . Application Context # get Autowire Capable Bean Factory ()} method . &lt; p &gt; You may also implement the {@ link org . springframework . beans . factory . Bean Factory Aware } interface , which exposes the internal Bean Factory even when running in an Application Context , to get access to an Autowire Capable Bean Factory : simply cast the passed - in Bean Factory to Autowire Capable Bean Factory ." />
      <item value="Extension" />
      <item value="Rejected" />
      <item value="trigger" />
      <item value="Reschedule" />
      <item value="Resume" />
      <item value="resumejob" />
      <item value="using Job Data" />
      <item value="store Durably" />
      <item value="job Should Recover" />
      <item value="trigger Group" />
      <item value="manual" />
      <item value="fork" />
      <item value="provided" />
      <item value="vehicle Tonnage" />
      <item value="milliseconds" />
      <item value="period" />
      <item value="interval" />
      <item value="休眠时间" />
      <item value="Consignment Date Time" />
      <item value="Goods Receipt Date Time" />
      <item value="Despatch Actual Date Time" />
      <item value="vehicle Number" />
      <item value="Usefrequencylog" />
      <item value="vehicle Dao" />
      <item value="on Subscribe" />
      <item value="on Complete" />
      <item value="tonnage" />
      <item value="cargo Tonnage" />
      <item value="handler Pay Freight To Driver Success" />
      <item value="locate" />
      <item value="Ignoring error during event callback" />
      <item value="Notify" />
      <item value="Subscribe" />
      <item value="determine Target Data Source" />
      <item value="determine Current Lookup Key" />
      <item value="resolve Specified Data Source" />
      <item value="truncated" />
      <item value="calculating" />
      <item value="NODE CHILDREN CHANGED" />
      <item value="NODE DATA CHANGED" />
      <item value="a string representation of this date , using the locale conventions ." />
      <item value="Creates a string representation of this &lt; tt &gt; Date &lt;/ tt &gt; object in an implementation - dependent form . The intent is that the form should be familiar to the user of the Java application , wherever it may happen to be running . The intent is comparable to that of the &quot;&lt; code &gt;% c &lt;/ code &gt;&quot; format supported by the &lt; code &gt; strftime ()&lt;/ code &gt; function of ISO &amp; nbsp ; C ." />
      <item value="roll" />
      <item value="交易" />
      <item value="统计" />
      <item value="handle" />
      <item value="处理" />
    </histories>
  </component>
</application>