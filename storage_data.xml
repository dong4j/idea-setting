<application>
  <component name="AppStorage">
    <histories>
      <item value="channel Invite Accept" />
      <item value="on Invite Received" />
      <item value="symbol" />
      <item value="符号" />
      <item value="exist" />
      <item value="存在" />
      <item value="handle" />
      <item value="处理" />
      <item value="INVITE JOIN ROOM" />
      <item value="CHAT DISMISS" />
      <item value="Invalid" />
      <item value="agree" />
      <item value="同意" />
      <item value="reject" />
      <item value="拒绝" />
      <item value="processed" />
      <item value="已处理" />
      <item value="untreated" />
      <item value="未处理" />
      <item value="申请" />
      <item value="remove" />
      <item value="移除" />
      <item value="踢人" />
      <item value="邀请" />
      <item value="已读" />
      <item value="接收人" />
      <item value="content" />
      <item value="内容" />
      <item value="&lt; p &gt; Return the value of the specified property of the specified bean , no matter which property reference format is used , as a String .&lt;/ p &gt;" />
      <item value="If we got a Transaction Aware Data Source Proxy , we need to perform // transactions for its underlying target Data Source , else data // access code won ' t see properly exposed transactions ( i . e . // transactions for the target Data Source )." />
      <item value="Isolation Level Data Source Router" />
      <item value="Determine the current lookup key . This will typically be implemented to check a thread - bound transaction context . &lt; p &gt; Allows for arbitrary keys . The returned key needs to match the stored lookup key type , as resolved by the {@ link # resolve Specified Lookup Key } method ." />
      <item value="resolved Default Data Source" />
      <item value="determine Target Data Source" />
      <item value="Rule Algorithm" />
      <item value="get Partition Algorithm" />
      <item value="Sets the major and minor version to Java 5. If the major version is older than 49, Java 5 extensions such as annotations are ignored by the JVM ." />
      <item value="Returns the signature at the join point ." />
      <item value="The Accessible Object class is the base class for Field , Method and Constructor objects . It provides the ability to flag a reflected object as suppressing default Java language access control checks when it is used . The access checks -- for public , default ( package ) access , protected , and private members -- are performed when Fields , Methods or Constructors are used to set or get fields , to invoke methods , or to create and initialize new instances of classes , respectively ." />
      <item value="打印" />
      <item value="Mybatis" />
      <item value="代理实现类只有1个" />
      <item value="inte" />
      <item value="if some of parameter names you need to retain are held in pre - existing jars , they need to be added to the classpath" />
      <item value="This represents the name of the local variable ." />
      <item value="Returns the name of the local variable" />
      <item value="Obtains parameter types of this method / constructor" />
      <item value="Obtains parameter types of this method / constructor ." />
      <item value="Obtains the modifiers of the method / constructor ." />
      <item value="Local Variable Attribute" />
    </histories>
  </component>
</application>